from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from backend.aprendizado import carregar_conhecimento
from backend.raciocinio import gerar_resposta, explicar_ficha, buscar_conhecimento

app = FastAPI(title="Babix IA")

# ======================================================
# ðŸ”¹ Middleware CORS
# ======================================================
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# ======================================================
# ðŸ”¹ Evento de inicializaÃ§Ã£o
# ======================================================
@app.on_event("startup")
async def startup_event():
    print("ðŸ”„ Carregando conhecimento do MBFT...")
    carregar_conhecimento("dados/mbft.pdf")
    print("âœ… MBFT carregado na memÃ³ria!")

# ======================================================
# ðŸ”¹ Endpoint principal de chat
# ======================================================
@app.post("/api/chat")
async def chat(request: Request):
    data = await request.json()
    pergunta = data.get("mensagem", "")
    resposta = gerar_resposta(pergunta)
    return {"resposta": resposta}

# ======================================================
# ðŸ”¹ Novo endpoint: explicaÃ§Ã£o direta de fichas MBFT
# ======================================================
@app.post("/api/explicar")
async def explicar(request: Request):
    data = await request.json()
    codigo = data.get("codigo", "").strip()
    if not codigo:
        return {"erro": "Ã‰ necessÃ¡rio informar o cÃ³digo da ficha, ex: 596-70."}

    texto_base = buscar_conhecimento()
    if not texto_base:
        return {"erro": "Base do MBFT ainda nÃ£o carregada."}

    resposta = explicar_ficha(codigo, texto_base)
    return {"codigo": codigo, "explicacao": resposta}

# ======================================================
# ðŸ”¹ Status de verificaÃ§Ã£o
# ======================================================
@app.get("/")
async def root():
    return {"status": "Babix IA ativa e com MBFT carregado!"}
