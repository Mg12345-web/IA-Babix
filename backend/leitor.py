import os
from pathlib import Path
from typing import List
import pdfplumber

try:
    import pytesseract
    from PIL import Image
except ImportError:
    pytesseract = None  # OCR opcional


# ============================================================
# üîπ Fun√ß√µes principais
# ============================================================

def extrair_paginas(pdf_path: Path, usar_ocr: bool = False) -> List[str]:
    """
    Extrai o texto de cada p√°gina do PDF.
    Se usar_ocr=True, faz OCR em p√°ginas que n√£o t√™m texto.
    """
    paginas = []
    if not pdf_path.exists():
        raise FileNotFoundError(f"Arquivo n√£o encontrado: {pdf_path}")

    with pdfplumber.open(str(pdf_path)) as pdf:
        for i, page in enumerate(pdf.pages, start=1):
            texto = page.extract_text(x_tolerance=1, y_tolerance=2) or ""

            # üîç Se a p√°gina n√£o tiver texto, tenta OCR
            if not texto.strip() and usar_ocr and pytesseract:
                print(f"üì∏ P√°gina {i} sem texto ‚Äî aplicando OCR...")
                img = page.to_image(resolution=250).original
                texto = pytesseract.image_to_string(img, lang="por")

            # Limpeza b√°sica
            texto = limpar_texto(texto)
            paginas.append(texto)

    return paginas


def extrair_texto(pdf_path: Path, usar_ocr: bool = False) -> str:
    """
    Extrai o texto completo de um PDF, aplicando OCR quando necess√°rio.
    """
    paginas = extrair_paginas(pdf_path, usar_ocr=usar_ocr)
    texto = "\n\n".join(paginas)
    return texto


# ============================================================
# üîπ Fun√ß√µes auxiliares
# ============================================================

def limpar_texto(texto: str) -> str:
    """Remove artefatos, espa√ßos e cabe√ßalhos comuns de PDFs jur√≠dicos."""
    if not texto:
        return ""

    # Remove cabe√ßalhos e numera√ß√£o repetitiva
    texto = texto.replace("\r", "")
    texto = texto.replace("‚Äì", "-")
    texto = texto.replace("‚Äî", "-")

    # Remove p√°ginas e rodap√©s comuns
    texto = re.sub(r"P√°gina\s+\d+\s+de\s+\d+", "", texto, flags=re.I)
    texto = re.sub(r"Copyright.+?(Senatran|Detran|Denatran)", "", texto, flags=re.I)

    # Remove espa√ßamentos e h√≠fens quebrando palavras
    texto = re.sub(r"(\w)-\n(\w)", r"\1\2", texto)
    texto = re.sub(r"\n{2,}", "\n", texto)
    texto = re.sub(r"[ ]{2,}", " ", texto)

    return texto.strip()


# ============================================================
# üîπ Teste isolado
# ============================================================

if __name__ == "__main__":
    exemplo = Path("backend/dados/mbft.pdf")
    if exemplo.exists():
        print("üìò Testando leitura do MBFT...")
        conteudo = extrair_texto(exemplo, usar_ocr=True)
        print(f"\nTrecho lido:\n{'-'*40}\n{conteudo[:1000]}")
    else:
        print("‚ö†Ô∏è Nenhum PDF de exemplo encontrado.")
